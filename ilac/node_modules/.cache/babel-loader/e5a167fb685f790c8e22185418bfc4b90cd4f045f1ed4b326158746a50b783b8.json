{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ervae\\\\Downloads\\\\ilac_asistan-\\\\ilac\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ImageUpload from \"./components/ImageUpload\";\nimport TextInputForm from \"./components/TextInputForm\";\nimport DrugExplanationCard from \"./components/DrugExplanationCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputType, setInputType] = useState(null); // \"image\" veya \"text\"\n  const [drugName, setDrugName] = useState(\"\");\n  const [explanation, setExplanation] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  // Görsel yüklendiğinde (VLM işlemi yapılacak yer)\n  const handleImageUpload = async file => {\n    setLoading(true);\n    setError(\"\");\n    setExplanation(\"\");\n    setDrugName(\"\");\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    try {\n      // Görseli backend'e gönder\n      const res1 = await fetch(\"http://localhost:5000/upload-image\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!res1.ok) throw new Error(\"Görsel yükleme hatası\");\n      const data1 = await res1.json();\n      const drug = data1.drug_name;\n      setDrugName(drug);\n\n      // İlaç bilgisi için LLM çağrısı\n      const res2 = await fetch(\"http://localhost:5000/get-drug-info\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          drug_name: drug\n        })\n      });\n      if (!res2.ok) throw new Error(\"İlaç bilgisi alınamadı\");\n      const data2 = await res2.json();\n      setExplanation(`Kullanım: ${data2.usage}\\nYan etkiler: ${data2.side_effects.join(\", \")}\\nUyarılar: ${data2.warnings.join(\", \")}`);\n    } catch (err) {\n      setError(err.message || \"Bir hata oluştu\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // İlaç adı yazıldığında (LLM işlemi yapılacak yer)\n  const handleTextSubmit = async drug => {\n    setLoading(true);\n    setError(\"\");\n    setExplanation(\"\");\n    setDrugName(\"\");\n    try {\n      setDrugName(drug);\n      const res = await fetch(\"http://localhost:5000/get-drug-info\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          drug_name: drug\n        })\n      });\n      if (!res.ok) throw new Error(\"İlaç bilgisi alınamadı\");\n      const data = await res.json();\n      setExplanation(`Kullanım: ${data.usage}\\nYan etkiler: ${data.side_effects.join(\", \")}\\nUyarılar: ${data.warnings.join(\", \")}`);\n    } catch (err) {\n      setError(err.message || \"Bir hata oluştu\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDC8A \\u0130la\\xE7 Tan\\u0131ma ve A\\xE7\\u0131klama Sistemi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), !inputType && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setInputType(\"image\"),\n        style: btnStyle,\n        children: \"\\uD83D\\uDCF7 G\\xF6rsel Y\\xFCkle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setInputType(\"text\"),\n        style: btnStyle,\n        children: \"\\u270D \\u0130la\\xE7 Yaz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), inputType === \"image\" && /*#__PURE__*/_jsxDEV(ImageUpload, {\n      onImageUpload: handleImageUpload,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), inputType === \"text\" && /*#__PURE__*/_jsxDEV(TextInputForm, {\n      onSubmitDrug: handleTextSubmit,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Y\\xFCkleniyor...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(DrugExplanationCard, {\n      drugName: drugName,\n      explanation: explanation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JnAkd2gncB9ysi8WnkPWc5VHEOk=\");\n_c = App;\nconst btnStyle = {\n  margin: \"10px\",\n  padding: \"10px 20px\",\n  fontSize: \"16px\",\n  borderRadius: \"8px\",\n  border: \"none\",\n  backgroundColor: \"#28a745\",\n  color: \"white\",\n  cursor: \"pointer\"\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ImageUpload","TextInputForm","DrugExplanationCard","jsxDEV","_jsxDEV","App","_s","inputType","setInputType","drugName","setDrugName","explanation","setExplanation","loading","setLoading","error","setError","handleImageUpload","file","formData","FormData","append","res1","fetch","method","body","ok","Error","data1","json","drug","drug_name","res2","headers","JSON","stringify","data2","usage","side_effects","join","warnings","err","message","handleTextSubmit","res","data","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","btnStyle","onImageUpload","onSubmitDrug","color","_c","margin","fontSize","borderRadius","border","backgroundColor","cursor","$RefreshReg$"],"sources":["C:/Users/ervae/Downloads/ilac_asistan-/ilac/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ImageUpload from \"./components/ImageUpload\";\r\nimport TextInputForm from \"./components/TextInputForm\";\r\nimport DrugExplanationCard from \"./components/DrugExplanationCard\";\r\n\r\nfunction App() {\r\n  const [inputType, setInputType] = useState(null); // \"image\" veya \"text\"\r\n  const [drugName, setDrugName] = useState(\"\");\r\n  const [explanation, setExplanation] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Görsel yüklendiğinde (VLM işlemi yapılacak yer)\r\n  const handleImageUpload = async (file) => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setExplanation(\"\");\r\n    setDrugName(\"\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    try {\r\n      // Görseli backend'e gönder\r\n      const res1 = await fetch(\"http://localhost:5000/upload-image\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!res1.ok) throw new Error(\"Görsel yükleme hatası\");\r\n\r\n      const data1 = await res1.json();\r\n      const drug = data1.drug_name;\r\n      setDrugName(drug);\r\n\r\n      // İlaç bilgisi için LLM çağrısı\r\n      const res2 = await fetch(\"http://localhost:5000/get-drug-info\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ drug_name: drug }),\r\n      });\r\n\r\n      if (!res2.ok) throw new Error(\"İlaç bilgisi alınamadı\");\r\n\r\n      const data2 = await res2.json();\r\n      setExplanation(\r\n        `Kullanım: ${data2.usage}\\nYan etkiler: ${data2.side_effects.join(\r\n          \", \"\r\n        )}\\nUyarılar: ${data2.warnings.join(\", \")}`\r\n      );\r\n    } catch (err) {\r\n      setError(err.message || \"Bir hata oluştu\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // İlaç adı yazıldığında (LLM işlemi yapılacak yer)\r\n  const handleTextSubmit = async (drug) => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setExplanation(\"\");\r\n    setDrugName(\"\");\r\n\r\n    try {\r\n      setDrugName(drug);\r\n\r\n      const res = await fetch(\"http://localhost:5000/get-drug-info\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ drug_name: drug }),\r\n      });\r\n\r\n      if (!res.ok) throw new Error(\"İlaç bilgisi alınamadı\");\r\n\r\n      const data = await res.json();\r\n      setExplanation(\r\n        `Kullanım: ${data.usage}\\nYan etkiler: ${data.side_effects.join(\r\n          \", \"\r\n        )}\\nUyarılar: ${data.warnings.join(\", \")}`\r\n      );\r\n    } catch (err) {\r\n      setError(err.message || \"Bir hata oluştu\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n      <h1>💊 İlaç Tanıma ve Açıklama Sistemi</h1>\r\n\r\n      {!inputType && (\r\n        <div>\r\n          <button onClick={() => setInputType(\"image\")} style={btnStyle}>\r\n            📷 Görsel Yükle\r\n          </button>\r\n          <button onClick={() => setInputType(\"text\")} style={btnStyle}>\r\n            ✍ İlaç Yaz\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {inputType === \"image\" && (\r\n        <ImageUpload onImageUpload={handleImageUpload} loading={loading} />\r\n      )}\r\n      {inputType === \"text\" && (\r\n        <TextInputForm onSubmitDrug={handleTextSubmit} loading={loading} />\r\n      )}\r\n\r\n      {loading && <p>Yükleniyor...</p>}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      <DrugExplanationCard drugName={drugName} explanation={explanation} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst btnStyle = {\r\n  margin: \"10px\",\r\n  padding: \"10px 20px\",\r\n  fontSize: \"16px\",\r\n  borderRadius: \"8px\",\r\n  border: \"none\",\r\n  backgroundColor: \"#28a745\",\r\n  color: \"white\",\r\n  cursor: \"pointer\",\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}