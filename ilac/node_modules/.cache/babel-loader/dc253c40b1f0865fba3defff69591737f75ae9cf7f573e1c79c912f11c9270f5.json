{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ervae\\\\Downloads\\\\ilac_asistan-\\\\ilac\\\\src\\\\components\\\\DrugExplanationCard.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrugExplanationCard = ({\n  drugName,\n  explanation\n}) => {\n  if (!explanation) return null;\n\n  // Ham metni JSON parse etmeden, sadece başlıklarla bölüyoruz\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 0\n      },\n      children: `İlacın adı: ${drugName || \"Bilinmeyen İlaç\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Kullan\\u0131m Alanlar\\u0131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: styles.pre,\n      children: extractSection(explanation, \"usage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Yan Etkiler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: styles.pre,\n      children: extractSection(explanation, \"side_effects\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Uyar\\u0131lar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: styles.pre,\n      children: extractSection(explanation, \"warnings\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Ham LLM \\xC7\\u0131kt\\u0131s\\u0131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: styles.pre,\n      children: explanation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n// Basit fonksiyon: belirli başlığı metinden çıkar\n_c = DrugExplanationCard;\nfunction extractSection(text, key) {\n  try {\n    const regex = new RegExp(`\"${key}\"\\\\s*:\\\\s*(\\\\[.*?\\\\])`, \"s\");\n    const match = text.match(regex);\n    if (!match) return \"Bilgi yok\";\n    // JSON array string'ini parse edip satır satır döndür\n    const arr = JSON.parse(match[1]);\n    return arr.join(\"\\n\");\n  } catch {\n    return \"Bilgi yok\";\n  }\n}\nconst styles = {\n  card: {\n    border: \"1px solid #ccc\",\n    padding: \"20px\",\n    borderRadius: \"10px\",\n    maxWidth: \"700px\",\n    margin: \"20px auto\",\n    backgroundColor: \"#f9f9f9\",\n    textAlign: \"left\"\n  },\n  pre: {\n    whiteSpace: \"pre-wrap\",\n    textAlign: \"left\",\n    backgroundColor: \"#f1f1f1\",\n    padding: \"10px\",\n    borderRadius: \"5px\"\n  }\n};\nexport default DrugExplanationCard;\nvar _c;\n$RefreshReg$(_c, \"DrugExplanationCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DrugExplanationCard","drugName","explanation","style","styles","card","children","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","pre","extractSection","_c","text","key","regex","RegExp","match","arr","JSON","parse","join","border","padding","borderRadius","maxWidth","margin","backgroundColor","textAlign","whiteSpace","$RefreshReg$"],"sources":["C:/Users/ervae/Downloads/ilac_asistan-/ilac/src/components/DrugExplanationCard.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst DrugExplanationCard = ({ drugName, explanation }) => {\r\n  if (!explanation) return null;\r\n\r\n  // Ham metni JSON parse etmeden, sadece başlıklarla bölüyoruz\r\n  return (\r\n    <div style={styles.card}>\r\n      <h2 style={{ marginTop: 0 }}>{`İlacın adı: ${drugName || \"Bilinmeyen İlaç\"}`}</h2>\r\n\r\n      <h3>Kullanım Alanları</h3>\r\n      <pre style={styles.pre}>{extractSection(explanation, \"usage\")}</pre>\r\n\r\n      <h3>Yan Etkiler</h3>\r\n      <pre style={styles.pre}>{extractSection(explanation, \"side_effects\")}</pre>\r\n\r\n      <h3>Uyarılar</h3>\r\n      <pre style={styles.pre}>{extractSection(explanation, \"warnings\")}</pre>\r\n\r\n      <h4>Ham LLM Çıktısı</h4>\r\n      <pre style={styles.pre}>{explanation}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Basit fonksiyon: belirli başlığı metinden çıkar\r\nfunction extractSection(text, key) {\r\n  try {\r\n    const regex = new RegExp(`\"${key}\"\\\\s*:\\\\s*(\\\\[.*?\\\\])`, \"s\");\r\n    const match = text.match(regex);\r\n    if (!match) return \"Bilgi yok\";\r\n    // JSON array string'ini parse edip satır satır döndür\r\n    const arr = JSON.parse(match[1]);\r\n    return arr.join(\"\\n\");\r\n  } catch {\r\n    return \"Bilgi yok\";\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  card: {\r\n    border: \"1px solid #ccc\",\r\n    padding: \"20px\",\r\n    borderRadius: \"10px\",\r\n    maxWidth: \"700px\",\r\n    margin: \"20px auto\",\r\n    backgroundColor: \"#f9f9f9\",\r\n    textAlign: \"left\",\r\n  },\r\n  pre: {\r\n    whiteSpace: \"pre-wrap\",\r\n    textAlign: \"left\",\r\n    backgroundColor: \"#f1f1f1\",\r\n    padding: \"10px\",\r\n    borderRadius: \"5px\",\r\n  },\r\n};\r\n\r\nexport default DrugExplanationCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}